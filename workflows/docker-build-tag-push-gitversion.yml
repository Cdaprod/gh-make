name: GitVersion Docker Build and Push Workflow

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Ensure the full commit history is fetched for GitVersion

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
        with:
          useConfigFile: false  # No config file, use defaults

      - name: Output Version
        run: echo "Version is ${{ steps.gitversion.outputs.semVer }}"

      - name: Create Git Tag
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/')
        env:
          VERSION: ${{ steps.gitversion.outputs.semVer }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag "v${VERSION}"
          git push origin "v${VERSION}"

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          NEW_VERSION: ${{ steps.gitversion.outputs.semVer }}
        run: |
          REPO_NAME_LOWER=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]' | cut -d '/' -f2)
          IMAGE_TAG="${DOCKERHUB_USERNAME}/${REPO_NAME_LOWER}:${NEW_VERSION}"
          echo "Building Docker image with tag: $IMAGE_TAG"
          docker build -t $IMAGE_TAG .
          docker push $IMAGE_TAG