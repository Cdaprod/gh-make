#!/usr/bin/env bash

set -e

# Color definitions
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Configuration
EXT_DIR="$HOME/.local/share/gh/extensions/gh-make"
REPOS_DIR="${GH_MAKE_REPOS_DIR:-$HOME/repos}"
HOOKS_DIR="${GH_MAKE_HOOKS_DIR:-$HOME/.github/hooks}"
SCRIPTS_DIR="${GH_MAKE_SCRIPTS_DIR:-$HOME/.github/scripts}"

# Define hooks to be installed
HOOKS="pre-commit commit-msg post-commit pre-push post-merge"

# Function to print colored output
print_color() {
  local color=$1
  local message=$2
  echo -e "${color}${message}${NC}"
}

# Function to get user confirmation
confirm() {
  local message=$1
  read -p "$(print_color $YELLOW "$message (y/n): ")" choice
  case "$choice" in
    y|Y ) return 0;;
    * ) return 1;;
  esac
}

# Function for setup
setup() {
  if [ "$(id -u)" = "0" ]; then
    print_color $RED "Error: Setup should not be run as root. Please run 'gh make setup' without sudo."
    exit 1
  fi

  print_color $BLUE "Running setup for gh-make..."
  
  # Create setup script
  cat > "$EXT_DIR/setup.sh" << EOL
#!/bin/bash
$(cat "$EXT_DIR/gh-make-setup-script")
EOL

  chmod +x "$EXT_DIR/setup.sh"
  
  # Run setup script with sudo
  if sudo "$EXT_DIR/setup.sh"; then
    print_color $GREEN "Setup complete. You can now use 'gh make' commands."
  else
    print_color $RED "Setup failed. Please check the error messages above."
  fi
  
  exit 0
}

# [Rest of the functions: select_repos, install_hooks, install_scripts, index_repos, clean, main_menu]

# Main execution
if [ "$1" = "setup" ]; then
  setup
else
  # Check if setup has been run
  if [ ! -f "$EXT_DIR/.setup_complete" ]; then
    print_color $YELLOW "Initial setup has not been run. Please run 'gh make setup' first."
    exit 1
  fi
  
  # Start the main menu
  main_menu
fi